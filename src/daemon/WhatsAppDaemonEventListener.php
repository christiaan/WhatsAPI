<?php
/**
 * This class is generated by running the generateEventListener.php in this directory
 */
class WhatsAppDaemonEventListener extends AbstractWhatsAppDaemonEventListener
{
    function onClose($phone, $error)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'error'));
    }

    function onCodeRegister($phone, $login, $pw, $type, $expiration, $kind, $price, $cost, $currency, $price_expiration)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'login', 'pw', 'type', 'expiration', 'kind', 'price', 'cost', 'currency', 'price_expiration'));
    }

    function onCodeRegisterFailed($phone, $status, $reason, $retry_after)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'status', 'reason', 'retry_after'));
    }

    function onCodeRequest($phone, $method, $length)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'method', 'length'));
    }

    function onCodeRequestFailed($phone, $method, $reason, $value)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'method', 'reason', 'value'));
    }

    function onCodeRequestFailedTooRecent($phone, $method, $reason, $retry_after)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'method', 'reason', 'retry_after'));
    }

    function onConnect($phone, $socket)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'socket'));
    }

    function onConnectError($phone, $socket)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'socket'));
    }

    function onCredentialsBad($phone, $status, $reason)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'status', 'reason'));
    }

    function onCredentialsGood($phone, $login, $pw, $type, $expiration, $kind, $price, $cost, $currency, $price_expiration)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'login', 'pw', 'type', 'expiration', 'kind', 'price', 'cost', 'currency', 'price_expiration'));
    }

    function onDisconnect($phone, $socket)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'socket'));
    }

    function onDissectPhone($phone, $country, $cc, $mcc, $lc, $lg)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'country', 'cc', 'mcc', 'lc', 'lg'));
    }

    function onDissectPhoneFailed($phone)
    {
        $this->outputEvent(__FUNCTION__, compact('phone'));
    }

    function onGetAudio($phone, $from, $msgid, $type, $time, $name, $size, $url, $file, $mimetype, $filehash, $duration, $acodec)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time', 'name', 'size', 'url', 'file', 'mimetype', 'filehash', 'duration', 'acodec'));
    }

    function onGetError($phone, $id, $error)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'id', 'error'));
    }

    function onGetGroups($phone, $groupList)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'groupList'));
    }

    function onGetGroupsInfo($phone, $groupList)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'groupList'));
    }

    function onGetGroupsSubject($phone, $gId, $time, $author, $participant, $name, $subject)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'gId', 'time', 'author', 'participant', 'name', 'subject'));
    }

    function onGetImage($phone, $from, $msgid, $type, $time, $name, $size, $url, $file, $mimetype, $filehash, $width, $height, $thumbnail)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time', 'name', 'size', 'url', 'file', 'mimetype', 'filehash', 'width', 'height', 'thumbnail'));
    }

    function onGetLocation($phone, $from, $msgid, $type, $time, $name, $place_name, $longitude, $latitude, $url, $thumbnail)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time', 'name', 'place_name', 'longitude', 'latitude', 'url', 'thumbnail'));
    }

    function onGetMessage($phone, $from, $msgid, $type, $time, $name, $message)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time', 'name', 'message'));
    }

    function onGetGroupMessage($phone, $from, $author, $msgid, $type, $time, $name, $message)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'author', 'msgid', 'type', 'time', 'name', 'message'));
    }

    function onGetGroupParticipants($phone, $groupId, $groupList)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'groupId', 'groupList'));
    }

    function onGetPrivacyBlockedList($phone, $children)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'children'));
    }

    function onGetProfilePicture($phone, $from, $type, $thumbnail)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'type', 'thumbnail'));
    }

    function onGetRequestLastSeen($phone, $from, $msgid, $sec)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'sec'));
    }

    function onGetServerProperties($phone, $version, $properties)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'version', 'properties'));
    }

    function onGetStatus($phone, $from, $type, $id, $t, $status)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'type', 'id', 't', 'status'));
    }

    function onGetvCard($phone, $from, $msgid, $type, $time, $name, $contact, $vcard)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time', 'name', 'contact', 'vcard'));
    }

    function onGetVideo($phone, $from, $msgid, $type, $time, $name, $url, $file, $size, $mimetype, $filehash, $duration, $vcodec, $acodec, $thumbnail)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time', 'name', 'url', 'file', 'size', 'mimetype', 'filehash', 'duration', 'vcodec', 'acodec', 'thumbnail'));
    }

    function onGroupsChatCreate($phone, $gId)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'gId'));
    }

    function onGroupsChatEnd($phone, $gId)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'gId'));
    }

    function onGroupsParticipantsAdd($phone, $groupId, $participant)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'groupId', 'participant'));
    }

    function onGroupsParticipantsRemove($phone, $groupId, $participant, $author)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'groupId', 'participant', 'author'));
    }

    function onLogin($phone)
    {
        $this->outputEvent(__FUNCTION__, compact('phone'));
    }

    function onLoginFailed($phone, $tag)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'tag'));
    }

    function onMediaMessageSent($phone, $to, $id, $filetype, $url, $filename, $filesize, $filehash, $icon)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'to', 'id', 'filetype', 'url', 'filename', 'filesize', 'filehash', 'icon'));
    }

    function onMediaUploadFailed($phone, $id, $node, $messageNode, $reason)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'id', 'node', 'messageNode', 'reason'));
    }

    function onMessageComposing($phone, $from, $msgid, $type, $time)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time'));
    }

    function onMessagePaused($phone, $from, $msgid, $type, $time)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time'));
    }

    function onMessageReceivedClient($phone, $from, $msgid, $type, $time)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type', 'time'));
    }

    function onMessageReceivedServer($phone, $from, $msgid, $type)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'msgid', 'type'));
    }

    function onPing($phone, $msgid)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'msgid'));
    }

    function onPresence($phone, $from, $type)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'type'));
    }

    function onProfilePictureChanged($phone, $from, $id, $t)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'id', 't'));
    }

    function onProfilePictureDeleted($phone, $from, $id, $t)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'from', 'id', 't'));
    }

    function onSendMessage($phone, $targets, $id, $node)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'targets', 'id', 'node'));
    }

    function onSendMessageReceived($phone, $id, $from, $type)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'id', 'from', 'type'));
    }

    function onSendPong($phone, $msgid)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'msgid'));
    }

    function onSendPresence($phone, $type, $name)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'type', 'name'));
    }

    function onSendStatusUpdate($phone, $msg)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'msg'));
    }

    function onUploadFile($phone, $name, $url)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'name', 'url'));
    }

    function onUploadFileFailed($phone, $name)
    {
        $this->outputEvent(__FUNCTION__, compact('phone', 'name'));
    }

    function onGetSyncResult($result)
    {
        $this->outputEvent(__FUNCTION__, compact('result'));
    }

    function onGetReceipt($from, $id, $offline, $retry)
    {
        $this->outputEvent(__FUNCTION__, compact('from', 'id', 'offline', 'retry'));
    }
}